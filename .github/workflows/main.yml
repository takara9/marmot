name: marmot CI on self-hosted hv1
on: push
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  DEBUG: true

jobs:
  display-variables:
    name: ${{ vars.JOB_NAME }}
    # You can use configuration variables with the `vars` context for dynamic jobs
    #if: ${{ vars.USE_VARIABLES == 'true' }}
    #runs-on: ${{ vars.RUNNER }}
    runs-on: self-hosted
    environment: ${{ vars.ENVIRONMENT_STAGE }}
    steps:
    - name: Use variables
      run: |
        echo "repository variable : $REPOSITORY_VAR"
        echo "organization variable : $ORGANIZATION_VAR"
        echo "overridden variable : $OVERRIDE_VAR"
        echo "variable from shell environment : $env_var"
      env:
        REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
        ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
        OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
    - name: show variables
      run: |
        echo ${DEBUG}
        env
        pwd
        ls -lR
        #echo "path2" $RUNNER_WORKSPACE
  
    - name: ${{ vars.HELLO_WORLD_STEP }}
      if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
      uses: actions/hello-world-javascript-action@main
      with:
        who-to-greet: ${{ vars.GREET_NAME }}


  # Label of the job
  marmot-CI-job:
    needs: display-variables
    runs-on: self-hosted
    services:
      etcd:
        image: ghcr.io/takara9/etcd:3.6.5
        ports:
          - 2379:2379

      coredns:
        image: maho/coredns:1.11.1
        ports: 
          - 1053:53/udp
        volumes:
          -  /var/actions-runner/_work/marmot/marmot/pkg/dns/testconf:/conf
        env:
          CONF: "/conf/Corefile"
          PORT: "53"

    steps:
    - uses: actions/checkout@v3
    - name: Install ca-certificates
      run: |
        sudo apt update && sudo apt install -y ca-certificates dnsutils etcd-client
        sudo update-ca-certificates

    #- name: Set up Go
    #  uses: actions/setup-go@v4
    #  with:
    #    go-version: '1.21'

    - name: Check coredns
      run: |
        docker ps
        dig -p 1053 @localhost A minio.labo.local +noall +answer

    - name: Check etcd put
      run: |
        export ETCDCTL_API=3 
        etcdctl put --endpoints=127.0.0.1:2379 /skydns/local/labo/a/hoge '{"host":"192.168.1.5","ttl":60}'
    - name: Check etcd get
      run: |
        export ETCDCTL_API=3 
        etcdctl get --endpoints=127.0.0.1:2379 /skydns/local/labo/a/hoge
    - name: Check resolve by coredns and etcd 
      run: |
        dig -p 1053 @localhost A hoge.a.labo.local +noall +answer
    - name: Test pkg/config
      run: | 
        cd pkg/config
        sudo -s make test
        cd ../..
    - name: Test pkg/db
      run: | 
        cd pkg/db
        sudo -s make test
        cd ../..
    - name: Test pkg/dns
      run: | 
        cd pkg/dns
        sudo -s make test
    - name: Test pkg/lvm
      run: | 
        cd pkg/lvm
        sudo -s make test
        cd ../..
    - name: Test pkg/util
      run: | 
        cd pkg/util
        sudo -s make test
        cd ../..
    - name: Test pkg/virt
      run: | 
        cd pkg/virt
        sudo -s make test
        cd ../..
    - name: Test pkg/marmot
      run: | 
        cd pkg/marmot
        sudo -s make test
        cd ../..
    - name: Test pkg/marmotd
      run: | 
        cd pkg/marmotd
        sudo -s make test
        cd ../..
    - name: Test cmd/marmotd
      run: | 
        cd cmd/marmotd
        sudo -s make test
        cd ../..
    - name: Test cmd/mactl2
      run: | 
        cd cmd/mactl2
        make mactl2-test
        sudo -s make test
        cd ../..
    - name: Test cmd/migtool
      run: | 
        cd cmd/migtool
        sudo -s make test
        cd ../..

    - name: Clean up
      run: |
        go clean -cache -testcache -modcache -fuzzcache