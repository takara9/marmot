name: marmot CI on self-hosted hv1
on: push
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  display-variables:
    name: ${{ vars.JOB_NAME }}
    # You can use configuration variables with the `vars` context for dynamic jobs
    #if: ${{ vars.USE_VARIABLES == 'true' }}
    #runs-on: ${{ vars.RUNNER }}
    runs-on: self-hosted
    environment: ${{ vars.ENVIRONMENT_STAGE }}
    steps:
    - name: Use variables
      run: |
        echo "repository variable : $REPOSITORY_VAR"
        echo "organization variable : $ORGANIZATION_VAR"
        echo "overridden variable : $OVERRIDE_VAR"
        echo "variable from shell environment : $env_var"
      env:
        REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
        ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
        OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
    - name: show variables
      run: |
        env
        pwd
        ls -lR
  
    - name: ${{ vars.HELLO_WORLD_STEP }}
      if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
      uses: actions/hello-world-javascript-action@main
      with:
        who-to-greet: ${{ vars.GREET_NAME }}


  # Label of the job
  marmot-CI-job:
    # You must use a Linux environment when using service containers or container jobs
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      etcd:
        # Docker Hub image
        image: bitnami/etcd
        # Provide Environment
        env:
          ALLOW_NONE_AUTHENTICATION: yes
          ETCD_ADVERTISE_CLIENT_URLS: "http://127.0.0.1:2379"
        ports:
          # Opens tcp port 2379 on the host and service container
          - 2379:2379
      coredns:
        image: coredns/coredns
        ports: 
          - 53
        env:
            TEST_ENV: true
        #volumes:
        #  - my_docker_volume:/coredns
        options: --cpus 1
    steps:
    - uses: actions/checkout@v3
    - name: Install ca-certificates
      run: |
        sudo apt update && sudo apt install -y ca-certificates
        sudo update-ca-certificates
        docker ps

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Test pkg/config
      run: | 
        cd pkg/config
        go mod tidy
        sudo -s make test
        cd ../..

    - name: Test pkg/db
      run: | 
        cd pkg/db
        go mod tidy
        sudo -s make test
        cd ../..

    - name: Test pkg/lvm
      run: | 
        cd pkg/lvm
        go mod tidy
        sudo -s make test
        cd ../..

    - name: Test pkg/util
      run: | 
        cd pkg/util
        go mod tidy
        sudo -s make test
        cd ../..

    - name: Test pkg/virt
      run: | 
        cd pkg/virt
        go mod tidy
        sudo -s make test
        cd ../..

        


